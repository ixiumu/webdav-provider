plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id "androidx.navigation.safeargs.kotlin"
    id 'com.mikepenz.aboutlibraries.plugin'
}

def appName = "WebDAV Provider"
def appNameDebug = "${appName} (Debug)"
def packageName = "me.alexbakker.webdav"
def providerAuthority = "${packageName}.provider"
def providerAuthorityDebug = "${packageName}.debug.provider"

def getCmdOutput = { cmd ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine cmd
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitHash = { -> return getCmdOutput(["git", "rev-parse", "--short", "HEAD"]) }
def getGitBranch = { -> return getCmdOutput(["git", "rev-parse", "--abbrev-ref", "HEAD"]) }

android {
    compileSdkVersion 33
    //buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId packageName
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "0.1"

        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
        buildConfigField "String", "GIT_BRANCH", "\"${getGitBranch()}\""

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }

        testInstrumentationRunner "me.alexbakker.webdav.WebDavTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }


    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'

        unitTests {
            all {
                ignoreFailures false
                testLogging {
                    events "passed", "skipped", "failed", "standardOut", "standardError"

                    showExceptions true
                    exceptionFormat "full"
                    showCauses true
                    showStackTraces true
                }
            }

            includeAndroidResources true
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"

            resValue("string", "app_name", appNameDebug)
            manifestPlaceholders = [providerAuthority: providerAuthorityDebug]
            buildConfigField("String", "PROVIDER_AUTHORITY", "\"${providerAuthorityDebug}\"")
        }
        release {
            resValue("string", "app_name", appName)
            manifestPlaceholders = [providerAuthority: providerAuthority]
            buildConfigField("String", "PROVIDER_AUTHORITY", "\"${providerAuthority}\"")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    lint {
        abortOnError true
        disable 'MissingTranslation'
    }
    namespace 'me.alexbakker.webdav'
}

dependencies {
    def roomVersion = "2.5.0"
    def testVersion = "1.4.0"
    def espressoVersion = "3.4.0"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.fragment:fragment-ktx:1.5.5"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation 'com.google.android.material:material:1.8.0'
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation "com.mikepenz:aboutlibraries:$aboutLibrariesVersion"
    implementation "com.mikepenz:aboutlibraries-core:$aboutLibrariesVersion"
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-simplexml:2.9.0'
//    implementation 'com.github.thegrizzlylabs:sardine-android:0.8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    kapt "androidx.room:room-compiler:$roomVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation "androidx.test:core:$testVersion"
    androidTestImplementation "androidx.test:runner:$testVersion"
    androidTestImplementation "androidx.test:rules:$testVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    androidTestUtil "androidx.test:orchestrator:$testVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
}
